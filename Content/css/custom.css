[ng\:cloak], [ng-cloak], [data-ng-cloak], [x-ng-cloak], .ng-cloak, .x-ng-cloak {
    display: none !important;
}

.backgroundRed {
    background-color: #ffafaf;
}

.backgroundGreen {
    background-color: #c2ffcc;
}

.backgroundYellow {
    background-color: #ffffb3;
}

.fancy-radio-group .btn-fancy-radio img {
    display: none;
}

.fancy-radio-group .btn-fancy-radio .normal {
    display: block;
}

.fancy-radio-group .btn-fancy-radio.active .normal {
    display: none;
}

.fancy-radio-group .btn-fancy-radio.active .checked {
    display: block;
}
.btn span.glyphicon {
    opacity: 0;
}

.btn.active span.glyphicon {
    opacity: 1;
}

/*begin css for checkbox*/
/* Customize the label (the container) */
.containercheck {
    display: block;
    position: relative;
    padding-left: 35px;
    margin-bottom: 12px;
    cursor: pointer;
    font-size: 22px;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
}

    /* Hide the browser's default checkbox */
    .containercheck input {
        position: absolute;
        opacity: 0;
    }

/* Create a custom checkbox */
.checkmark {
    position: absolute;
    top: 0;
    left: 0;
    height: 25px;
    width: 25px;
    background-color: #eee;
}

/* On mouse-over, add a grey background color */
.containercheck:hover input ~ .checkmark {
    background-color: #ccc;
}

/* When the checkbox is checked, add a blue background */
.containercheck input:checked ~ .checkmark {
    background-color: #2196F3;
}

/* Create the checkmark/indicator (hidden when not checked) */
.checkmark:after {
    content: "";
    position: absolute;
    display: none;
}

/* Show the checkmark when checked */
.containercheck input:checked ~ .checkmark:after {
    display: block;
}

/* Style the checkmark/indicator */
.containercheck .checkmark:after {
    left: 9px;
    top: 5px;
    width: 5px;
    height: 10px;
    border: solid white;
    border-width: 0 3px 3px 0;
    -webkit-transform: rotate(45deg);
    -ms-transform: rotate(45deg);
    transform: rotate(45deg);
}

#grad {
    background: linear-gradient(yellow, red);
}

.add-icon {
    padding-left:15px;
}

.modal-box div > span {
    color: #cbcbcb;
    font-size: 30px;
    cursor: pointer
}

.modal-box div > span:hover{
    color: #000;
}

    .modal-box div > span:active {
        color: #000;
    }

.list-chev:hover {
    color: red;
    cursor: pointer;
}

.new-item {
    border: dashed 1px #cbcbcb;
    background-color: #fff;
    color: #cbcbcb;
    font-size: 15px;
    padding: 15px;
}

.list-items {
    background-color: #fff;
    margin-left: 15px;
    margin-right: 15px;
}

.list-items span{
    font-size: 20px;
}

h6 {
    color: #cbcbcb;
    font-style: italic;
    margin: 3px;
}

.list-content{
    padding-top: 15px;
}

.create-button{
    margin-bottom: 15px!important;
}
/*new checkmarks*/
/* The container */
.containers {
    display: block;
    position: relative;
    padding-left: 35px;
    margin-bottom: 12px;
    cursor: pointer;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
}

    /* Hide the browser's default checkbox */
    .containers input {
        position: absolute;
        opacity: 0;
        cursor: pointer;
    }

/* Create a custom checkbox */
.checkmark {
    position: absolute;
    top: 0;
    left: 0;
    height: 25px;
    width: 25px;
    background-color: #eee;
    border: 1px solid orange;
    border-radius: 50%;
}

/* On mouse-over, add a grey background color */
.containers:hover input ~ .checkmark {
    background-color: #ccc;
}

/* When the checkbox is checked, add a blue background */
.containers input:checked ~ .checkmark {
    background-color: orange;
}

/* Create the checkmark/indicator (hidden when not checked) */
.checkmark:after {
    content: "";
    position: absolute;
    display: none;
}

/* Show the checkmark when checked */
.containers input:checked ~ .checkmark:after {
    display: block;
}

/* Style the checkmark/indicator */
.containers .checkmark:after {
    left: 9px;
    top: 5px;
    width: 5px;
    height: 10px;
    border: solid white;
    border-width: 0 3px 3px 0;
    -webkit-transform: rotate(45deg);
    -ms-transform: rotate(45deg);
    transform: rotate(45deg);
}

@media only screen and (max-width: 600px) {
    .modal {
        text-align: center;
        padding: 0 !important;
    }

        .modal:before {
            content: '';
            display: inline-block;
            height: 100%;
            vertical-align: middle;
        }

    .modal-dialog {
        display: inline-block;
        text-align: left;
        vertical-align: middle;
    }

    .modal-box {
        min-width: 315px;
    }

    .pull-left-sm {
        float: left;
    }

    .pull-right-sm{
        float: right;
    }
}